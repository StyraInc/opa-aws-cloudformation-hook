{
    "typeName": "Styra::OPA::Hook",
    "description": "Example hook used to call out to Open Policy Agent",
    "sourceUrl": "https://www.openpolicyagent.org/docs/latest/",
    "documentationUrl": "https://www.openpolicyagent.org/docs/latest/",
    "typeConfiguration": {
        "properties": {
            "opaUrl": {
                "description": "URL pointing to OPA for policy decisions",
                "type": "string"
            },
            "opaAuthTokenSecret": {
                "description": "ARN referencing a secret containing a token to use for authenticating against OPA (secret key must be 'opa_auth_token')",
                "type": "string"
            }
        },
        "required": ["opaUrl"],
        "additionalProperties": false
    },
    "required": [],
    "handlers": {
        "preCreate": {
            "targetNames": [
                "AWS::S3::Bucket",
                "AWS::S3::BucketPolicy",
                "AWS::EC2::SecurityGroup",
                "AWS::EC2::SecurityGroupIngress",
                "AWS::IAM::Role",
                "AWS::IAM::User",
                "AWS::EKS::Cluster",
                "AWS::RDS::DBSecurityGroup",
                "AWS::RDS::DBInstance"
            ],
            "permissions": [
                "secretsmanager:GetSecretValue"
            ]
        },
        "preUpdate": {
            "targetNames": [
                "AWS::S3::Bucket",
                "AWS::S3::BucketPolicy",
                "AWS::EC2::SecurityGroup",
                "AWS::EC2::SecurityGroupIngress",
                "AWS::IAM::Role",
                "AWS::IAM::User",
                "AWS::EKS::Cluster",
                "AWS::RDS::DBSecurityGroup",
                "AWS::RDS::DBInstance"
            ],
            "permissions": [
                "secretsmanager:GetSecretValue"
            ]
        },
        "preDelete": {
            "targetNames": [
                "AWS::S3::Bucket",
                "AWS::S3::BucketPolicy",
                "AWS::EC2::SecurityGroup",
                "AWS::EC2::SecurityGroupIngress",
                "AWS::IAM::Role",
                "AWS::IAM::User",
                "AWS::EKS::Cluster",
                "AWS::RDS::DBSecurityGroup",
                "AWS::RDS::DBInstance"
            ],
            "permissions": [
                "secretsmanager:GetSecretValue"
            ]
        }
    },
    "additionalProperties": false
}
